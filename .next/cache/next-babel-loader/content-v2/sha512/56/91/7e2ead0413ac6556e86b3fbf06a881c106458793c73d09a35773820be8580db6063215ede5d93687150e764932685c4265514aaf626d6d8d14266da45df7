{"ast":null,"code":"import { call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport * as actions from '../actions/users';\nimport { useGetPosts, useGetUsers } from \"../../../actions\";\nexport const fetchUsers = () => {\n  const {\n    data,\n    error,\n    loading\n  } = useGetPosts();\n  return {\n    data,\n    error,\n    loading\n  };\n}; // Step 9: Create getUser function which watcher will call\n\nfunction* getUsers() {\n  try {\n    const result = yield call(fetchUsers);\n    yield put(actions.getUsersSuccess({\n      items: result.data\n    }));\n  } catch (e) {\n    console.log(e);\n  }\n} // Step 8: Create User Saga Watcher\n// Whenever get-user action dispatch this saga will watch and call getUsers function\n\n\nfunction* watchGetUsersRequest() {\n  yield takeEvery(actions.Types.GET_USERS_REQUESTS, getUsers);\n} // Step 10: Create fork\n\n\nconst usersSaga = [fork(watchGetUsersRequest)];\nexport default usersSaga;","map":{"version":3,"sources":["/home/ubuntu/work/github/Starter Project/starter-app-project/components/redux/sagas/users.js"],"names":["call","fork","put","takeEvery","actions","useGetPosts","useGetUsers","fetchUsers","data","error","loading","getUsers","result","getUsersSuccess","items","e","console","log","watchGetUsersRequest","Types","GET_USERS_REQUESTS","usersSaga"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAAyC,oBAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,kBAAvC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBL,WAAW,EAA1C;AACA,SAAO;AAACG,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAP;AACH,CAHM,C,CAMP;;AACA,UAAUC,QAAV,GAAqB;AACjB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACO,UAAD,CAAzB;AACA,UAAML,GAAG,CAACE,OAAO,CAACS,eAAR,CAAwB;AAC9BC,MAAAA,KAAK,EAAEF,MAAM,CAACJ;AADgB,KAAxB,CAAD,CAAT;AAGH,GALD,CAKE,OAAOO,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,C,CAED;AACA;;;AACA,UAAUG,oBAAV,GAAiC;AAC7B,QAAMf,SAAS,CAACC,OAAO,CAACe,KAAR,CAAcC,kBAAf,EAAmCT,QAAnC,CAAf;AACH,C,CAED;;;AACA,MAAMU,SAAS,GAAG,CACdpB,IAAI,CAACiB,oBAAD,CADU,CAAlB;AAIA,eAAeG,SAAf","sourcesContent":["import {call, fork, put, takeEvery} from \"redux-saga/effects\";\nimport * as actions from '../actions/users'\nimport {useGetPosts, useGetUsers} from \"../../../actions\";\n\nexport const fetchUsers = () => {\n    const {data, error, loading} = useGetPosts();\n    return {data, error, loading}\n}\n\n\n// Step 9: Create getUser function which watcher will call\nfunction* getUsers() {\n    try {\n        const result = yield call(fetchUsers);\n        yield put(actions.getUsersSuccess({\n            items: result.data\n        }))\n    } catch (e) {\n        console.log(e)\n    }\n}\n\n// Step 8: Create User Saga Watcher\n// Whenever get-user action dispatch this saga will watch and call getUsers function\nfunction* watchGetUsersRequest() {\n    yield takeEvery(actions.Types.GET_USERS_REQUESTS, getUsers);\n}\n\n// Step 10: Create fork\nconst usersSaga = [\n    fork(watchGetUsersRequest)\n];\n\nexport default usersSaga;\n"]},"metadata":{},"sourceType":"module"}