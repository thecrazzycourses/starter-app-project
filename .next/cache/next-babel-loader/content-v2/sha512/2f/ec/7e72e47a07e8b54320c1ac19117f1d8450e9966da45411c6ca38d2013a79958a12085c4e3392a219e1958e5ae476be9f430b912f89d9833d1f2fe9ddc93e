{"ast":null,"code":"import { useEffect, useState } from \"react\";\nexport const useGetData = url => {\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(url);\n      const result = await res.json();\n\n      if (res.status !== 200) {\n        setError(result);\n      } else {\n        setData(result);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    data,\n    error,\n    loading\n  };\n};","map":{"version":3,"sources":["/home/ubuntu/work/github/Starter Project/starter-app-project/actions/index.js"],"names":["useEffect","useState","useGetData","url","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","result","json","status"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,UAAU,GAAIC,GAAD,IAAS;AAC/B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,SAAf,GAA2B;AACvB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAvB;AACA,YAAMU,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAArB;;AACA,UAAIH,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB;AACpBR,QAAAA,QAAQ,CAACM,MAAD,CAAR;AACH,OAFD,MAEO;AACHR,QAAAA,OAAO,CAACQ,MAAD,CAAP;AACH;;AACDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDC,IAAAA,SAAS;AACZ,GAZQ,EAYN,EAZM,CAAT;AAaA,SAAO;AAACN,IAAAA,IAAD;AAAOE,IAAAA,KAAP;AAAcE,IAAAA;AAAd,GAAP;AACH,CAnBM","sourcesContent":["import {useEffect, useState} from \"react\";\n\nexport const useGetData = (url) => {\n    const [data, setData] = useState();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function fetchData() {\n            const res = await fetch(url);\n            const result = await res.json();\n            if (res.status !== 200) {\n                setError(result);\n            } else {\n                setData(result);\n            }\n            setLoading(false);\n        }\n        fetchData();\n    }, [])\n    return {data, error, loading}\n}\n"]},"metadata":{},"sourceType":"module"}