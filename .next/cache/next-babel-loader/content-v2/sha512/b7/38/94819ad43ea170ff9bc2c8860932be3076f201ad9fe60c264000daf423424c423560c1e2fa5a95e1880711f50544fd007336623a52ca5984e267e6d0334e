{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ubuntu/work/github/Starter Project/starter-app-project/pages/posts/index.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\n\nvar useGetPosts = function useGetPosts() {\n  _s();\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    function getPosts() {\n      return _getPosts.apply(this, arguments);\n    }\n\n    function _getPosts() {\n      _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/api/v1/posts\");\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                result = _context.sent;\n\n                if (result.status !== 200) {\n                  setError(result);\n                } else {\n                  setPosts(result);\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPosts.apply(this, arguments);\n    }\n\n    getPosts();\n  }, []);\n  return {\n    posts: posts\n  };\n};\n\n_s(useGetPosts, \"DP+wIEsEdCJnvHz2WE4VZB61N4g=\");\n\nvar Posts = function Posts() {\n  _s2();\n\n  // const {posts} = useGetPosts();\n  var _useState3 = useState([]),\n      posts = _useState3[0],\n      setPosts = _useState3[1];\n\n  var _useState4 = useState(),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  useEffect(function () {\n    function getPosts() {\n      return _getPosts2.apply(this, arguments);\n    }\n\n    function _getPosts2() {\n      _getPosts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var res, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"/api/v1/posts\");\n\n              case 2:\n                res = _context2.sent;\n                _context2.next = 5;\n                return res.json();\n\n              case 5:\n                result = _context2.sent;\n\n                if (result.status !== 200) {\n                  setError(result);\n                } else {\n                  setPosts(result);\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getPosts2.apply(this, arguments);\n    }\n\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here are the Posts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/posts/\".concat(post.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, _this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n\n_s2(Posts, \"DP+wIEsEdCJnvHz2WE4VZB61N4g=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/ubuntu/work/github/Starter Project/starter-app-project/pages/posts/index.js"],"names":["React","useEffect","useState","Link","useGetPosts","posts","setPosts","error","setError","getPosts","fetch","res","json","result","status","Posts","map","post","id","title"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBACIF,QAAQ,CAAC,EAAD,CADZ;AAAA,MACfG,KADe;AAAA,MACRC,QADQ;;AAAA,mBAEIJ,QAAQ,EAFZ;AAAA,MAEfK,KAFe;AAAA,MAERC,QAFQ;;AAItBP,EAAAA,SAAS,CAAC,YAAM;AAAA,aACGQ,QADH;AAAA;AAAA;;AAAA;AAAA,2EACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBC,KAAK,CAAC,eAAD,CAD3B;;AAAA;AACUC,gBAAAA,GADV;AAAA;AAAA,uBAEyBA,GAAG,CAACC,IAAJ,EAFzB;;AAAA;AAEUC,gBAAAA,MAFV;;AAGI,oBAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACvBN,kBAAAA,QAAQ,CAACK,MAAD,CAAR;AACH,iBAFD,MAEO;AACHP,kBAAAA,QAAQ,CAACO,MAAD,CAAR;AACH;;AAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;AAAA;AAAA;;AAUZJ,IAAAA,QAAQ;AACX,GAXQ,EAWN,EAXM,CAAT;AAYA,SAAO;AAACJ,IAAAA,KAAK,EAALA;AAAD,GAAP;AACH,CAjBD;;GAAMD,W;;AAmBN,IAAMW,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAEjB;AAFiB,mBAIUb,QAAQ,CAAC,EAAD,CAJlB;AAAA,MAITG,KAJS;AAAA,MAIFC,QAJE;;AAAA,mBAKUJ,QAAQ,EALlB;AAAA,MAKTK,KALS;AAAA,MAKFC,QALE;;AAOhBP,EAAAA,SAAS,CAAC,YAAM;AAAA,aACGQ,QADH;AAAA;AAAA;;AAAA;AAAA,4EACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBC,KAAK,CAAC,eAAD,CAD3B;;AAAA;AACUC,gBAAAA,GADV;AAAA;AAAA,uBAEyBA,GAAG,CAACC,IAAJ,EAFzB;;AAAA;AAEUC,gBAAAA,MAFV;;AAGI,oBAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACvBN,kBAAAA,QAAQ,CAACK,MAAD,CAAR;AACH,iBAFD,MAEO;AACHP,kBAAAA,QAAQ,CAACO,MAAD,CAAR;AACH;;AAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;AAAA;AAAA;;AAUZJ,IAAAA,QAAQ;AACX,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,gBACKJ,KAAK,CAACW,GAAN,CAAU,UAAAC,IAAI;AAAA,4BACX;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,mBAAYA,IAAI,CAACC,EAAjB,CAAV;AAAA,mCACI;AAAA,wBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAASF,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA,OAAd;AADL;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAeH,CAnCD;;IAAMH,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Link from 'next/link';\n\nconst useGetPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        async function getPosts() {\n            const res = await fetch(\"/api/v1/posts\");\n            const result = await res.json();\n            if (result.status !== 200) {\n                setError(result)\n            } else {\n                setPosts(result);\n            }\n        }\n        getPosts();\n    }, [])\n    return {posts}\n}\n\nconst Posts = () => {\n\n   // const {posts} = useGetPosts();\n\n    const [posts, setPosts] = useState([]);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        async function getPosts() {\n            const res = await fetch(\"/api/v1/posts\");\n            const result = await res.json();\n            if (result.status !== 200) {\n                setError(result)\n            } else {\n                setPosts(result);\n            }\n        }\n        getPosts();\n    }, [])\n\n    return (\n        <div>\n            <h1>Here are the Posts:</h1>\n            <ul>\n                {posts.map(post => (\n                    <li key={post.id}>\n                        <Link href={`/posts/${post.id}`}>\n                            <a>{post.title}</a>\n                        </Link>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}