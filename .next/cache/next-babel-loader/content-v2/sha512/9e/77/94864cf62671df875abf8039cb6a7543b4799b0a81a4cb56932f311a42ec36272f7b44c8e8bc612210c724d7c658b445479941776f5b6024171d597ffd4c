{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/work/github/Starter Project/starter-app-project/pages/posts/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from 'next/link';\nimport useSWR from \"swr/esm\";\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (res) {\n    return res.json();\n  });\n};\n\nvar Posts = function Posts() {\n  _s();\n\n  //const {data, error, loading} = useGetData(\"/api/v1/posts\");\n  var _useSWR = useSWR(\"/api/v1/posts\", fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error,\n      loading = _useSWR.loading;\n\n  function renderPosts(posts) {\n    var _this2 = this;\n\n    return posts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/posts/\".concat(post.id),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, _this2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, _this2)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, _this2);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here are the Posts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, _this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, _this), data && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderPosts(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Posts, \"UYc3HngdEy5CRTW+yaPEz6HxXgc=\", false, function () {\n  return [useSWR];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/ubuntu/work/github/Starter Project/starter-app-project/pages/posts/index.js"],"names":["React","Link","useSWR","fetcher","url","fetch","then","res","json","Posts","data","error","loading","renderPosts","posts","map","post","id","title","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAAnB,CAAT;AAAA,CAAhB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAEhB;AAFgB,gBAGeP,MAAM,CAAC,eAAD,EAAkBC,OAAlB,CAHrB;AAAA,MAGTO,IAHS,WAGTA,IAHS;AAAA,MAGHC,KAHG,WAGHA,KAHG;AAAA,MAGIC,OAHJ,WAGIA,OAHJ;;AAKhB,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,WAAQA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,0BAClB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,mBAAYA,IAAI,CAACC,EAAjB,CAAV;AAAA,iCACI;AAAA,sBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,SAASF,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,gBADkB;AAAA,KAAd,CAAR;AAQH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAIQL,OAAO,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALR,EAUQF,IAAI,iBACJ;AAAA,gBACKG,WAAW,CAACH,IAAD;AADhB;AAAA;AAAA;AAAA;AAAA,aAXR,EAiBQC,KAAK,iBACL;AAAA,gBAAMA,KAAK,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA,aAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAuBH,CAvCD;;GAAMV,K;UAG6BP,M;;;KAH7BO,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport useSWR from \"swr/esm\";\n\nconst fetcher = (url) => fetch(url).then(res => res.json());\n\nconst Posts = () => {\n\n    //const {data, error, loading} = useGetData(\"/api/v1/posts\");\n    const {data, error, loading} = useSWR(\"/api/v1/posts\", fetcher);\n\n    function renderPosts(posts) {\n        return (posts.map(post => (\n            <li key={post.id}>\n                <Link href={`/posts/${post.id}`}>\n                    <a>{post.title}</a>\n                </Link>\n\n            </li>\n        )))\n    }\n\n    return (\n        <div>\n            <h1>Here are the Posts:</h1>\n\n            {\n                loading &&\n                <div>Loading</div>\n\n            }\n\n            {\n                data &&\n                <ul>\n                    {renderPosts(data)}\n                </ul>\n            }\n\n            {\n                error &&\n                <div>{error.message}</div>\n            }\n        </div>\n    );\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}