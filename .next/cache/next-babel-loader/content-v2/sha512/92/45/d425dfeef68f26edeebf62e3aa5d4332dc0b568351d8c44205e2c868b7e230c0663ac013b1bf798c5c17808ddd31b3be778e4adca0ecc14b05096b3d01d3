{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/work/github/Starter Project/starter-app-project/pages/posts/[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGetPost } from \"../../actions\";\nimport { useRouter } from \"next/router\";\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter(); // const {data: post, error, loading} = useGetData(router.query.id ? `/api/v1/posts/${router.query.id}` : null)\n\n  var _useGetPost = useGetPost(router.query.id),\n      data = _useGetPost.data,\n      error = _useGetPost.error,\n      loading = _useGetPost.loading;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, _this), post && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Post ID: \", post.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Post Title: \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Post Body: \", post.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Post UserID: \", post.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Post, \"E+2vg3QFOrQSDn7pMbY9lxqZfpw=\", false, function () {\n  return [useRouter, useGetPost];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/ubuntu/work/github/Starter Project/starter-app-project/pages/posts/[id].js"],"names":["React","useGetPost","useRouter","Post","router","query","id","data","error","loading","message","post","title","body","userId"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,eAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,MAAM,GAAGF,SAAS,EAAxB,CADe,CAEhB;;AAFgB,oBAGgBD,UAAU,CAACG,MAAM,CAACC,KAAP,CAAaC,EAAd,CAH1B;AAAA,MAGRC,IAHQ,eAGRA,IAHQ;AAAA,MAGFC,KAHE,eAGFA,KAHE;AAAA,MAGKC,OAHL,eAGKA,OAHL;;AAKf,sBACI;AAAA,eAEQA,OAAO,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHR,EAOQD,KAAK,iBACL;AAAA,gBAAMA,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,aARR,EAWQC,IAAI,iBACJ;AAAA,8BACI;AAAA,gCAAcA,IAAI,CAACL,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA,mCAAgBK,IAAI,CAACC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA,kCAAeD,IAAI,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII;AAAA,oCAAiBF,IAAI,CAACG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA,oBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAsBH,CA3BD;;GAAMX,I;UACaD,S,EAEgBD,U;;;KAH7BE,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport {useGetPost} from \"../../actions\";\nimport {useRouter} from \"next/router\";\n\nconst Post = () => {\n    const router = useRouter();\n   // const {data: post, error, loading} = useGetData(router.query.id ? `/api/v1/posts/${router.query.id}` : null)\n    const {data, error, loading} = useGetPost(router.query.id);\n\n    return (\n        <div>\n            {\n                loading &&\n                <div>Loading...</div>\n            }\n\n            {\n                error &&\n                <div>{error.message}</div>\n            }\n            {\n                post &&\n                <>\n                    <h1>Post ID: {post.id}</h1>\n                    <p>Post Title: {post.title}</p>\n                    <p>Post Body: {post.body}</p>\n                    <p>Post UserID: {post.userId}</p>\n                </>\n            }\n        </div>\n    );\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}