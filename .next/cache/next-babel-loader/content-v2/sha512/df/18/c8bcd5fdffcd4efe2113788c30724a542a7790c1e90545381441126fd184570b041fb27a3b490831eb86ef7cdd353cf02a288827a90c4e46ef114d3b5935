{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport var useGetPosts = function useGetPosts() {\n  _s();\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    function getPosts() {\n      return _getPosts.apply(this, arguments);\n    }\n\n    function _getPosts() {\n      _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/api/v1/posts\");\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                result = _context.sent;\n                if (result !== 200) setPosts(result);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPosts.apply(this, arguments);\n    }\n\n    getPosts();\n  }, []);\n  return {\n    posts: posts\n  };\n};\n\n_s(useGetPosts, \"DP+wIEsEdCJnvHz2WE4VZB61N4g=\");","map":{"version":3,"sources":["/home/ubuntu/work/github/Starter Project/starter-app-project/actions/index.js"],"names":["useEffect","useState","useGetPosts","posts","setPosts","error","setError","getPosts","fetch","res","json","result"],"mappings":";;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBACHD,QAAQ,CAAC,EAAD,CADL;AAAA,MACtBE,KADsB;AAAA,MACfC,QADe;;AAAA,mBAEHH,QAAQ,EAFL;AAAA,MAEtBI,KAFsB;AAAA,MAEfC,QAFe;;AAI7BN,EAAAA,SAAS,CAAC,YAAM;AAAA,aACGO,QADH;AAAA;AAAA;;AAAA;AAAA,2EACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBC,KAAK,CAAC,eAAD,CAD3B;;AAAA;AACUC,gBAAAA,GADV;AAAA;AAAA,uBAEyBA,GAAG,CAACC,IAAJ,EAFzB;;AAAA;AAEUC,gBAAAA,MAFV;AAGI,oBAAIA,MAAM,KAAK,GAAf,EACAP,QAAQ,CAACO,MAAD,CAAR;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;AAAA;AAAA;;AAOZJ,IAAAA,QAAQ;AACX,GARQ,EAQN,EARM,CAAT;AASA,SAAO;AAACJ,IAAAA,KAAK,EAALA;AAAD,GAAP;AACH,CAdM;;GAAMD,W","sourcesContent":["import {useEffect, useState} from \"react\";\n\nexport const useGetPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        async function getPosts() {\n            const res = await fetch(\"/api/v1/posts\");\n            const result = await res.json();\n            if (result !== 200)\n            setPosts(result);\n        }\n        getPosts();\n    }, [])\n    return {posts}\n}\n"]},"metadata":{},"sourceType":"module"}